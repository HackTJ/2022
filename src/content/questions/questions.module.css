.questions {
  display: grid;
  max-width: min(80%, 100rem);
  margin: 0 auto;
  grid-template-columns: repeat(auto-fit, minmax(20rem, 1fr));
  grid-gap: 5%;
}

.bottom-question {
  margin: 1em auto;
}

.column {
  position: relative;
  display: flex;
  flex-direction: column;
}

/*
don't use `composes` because that concatenates the class strings, which doesn't
work in this component because we need to programatically apply classes.
*/
.roundBottom {
  border-bottom-left-radius: 0.5rem;
  border-bottom-right-radius: 0.5rem;
}
.roundTop {
  border-top-left-radius: 0.5rem;
  border-top-right-radius: 0.5rem;
}

.cardContainer {
  font-size: 1rem;
  border-color: #a0aec0;
  background-color: white;
  border-width: 2px;
  padding: 1em;
  max-width: none;
  margin-top: 0;
  margin-bottom: 0;
  flex-grow: none;
  transition: all 250ms ease-in-out;
  transition-property: margin, transform, border-radius, opacity;
}

.cardContainer:hover {
  background-color: #d8e3e6;
}

.cardContainer:first-child {
  border-top-width: 2px;
  border-top-left-radius: 0.5rem;
  border-top-right-radius: 0.5rem;
}

.cardContainer:last-child {
  border-bottom-width: 2px;
  border-bottom-left-radius: 0.5rem;
  border-bottom-right-radius: 0.5rem;
}

.cardContainer:not(.selected) + .cardContainer:not(.selected) {
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}

.cardContainer .selected {
  border-top-left-radius: 0.5rem;
  border-top-right-radius: 0.5rem;
  border-top-width: 2px;
}

.selected {
  margin: 1.5rem 0;
  border-width: 2px;
  border-radius: 0.5rem;
  transform: scale3d(1.075, 1.075, 1);
}

.bottomQuestion {
  margin: 1em 0;
  text-align: center;
}

.email {
  color: white;
}

@media only screen and (max-width: 800px) {
  .questions {
    grid-gap: 0;
  }
  .column {
    border-top-left-radius: 0.5rem;
    border-top-right-radius: 0.5rem;
  }
  .column:last-child:not(.roundTop)
    .cardContainer:first-child:not(.roundTop, .selected) {
    border-top-left-radius: 0;
    border-top-right-radius: 0;
  }
  .column:first-child:not(.roundBottom)
    .cardContainer:last-child:not(.roundBottom, .selected) {
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
  }
}
